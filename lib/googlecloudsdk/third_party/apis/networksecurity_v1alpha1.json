{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "networksecurity:v1alpha1",
  "name": "networksecurity",
  "canonicalName": "NetworkSecurity",
  "version": "v1alpha1",
  "revision": "0",
  "title": "Network Security API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/networking",
  "protocol": "rest",
  "rootUrl": "https://networksecurity.googleapis.com/",
  "mtlsRootUrl": "https://networksecurity.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://networksecurity.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`\/`Create`\/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListAuthenticationResponse": {
      "id": "ListAuthenticationResponse",
      "description": "Response returned by the ListAuthentications method.",
      "type": "object",
      "properties": {
        "resources": {
          "description": "List of Authentication resources.",
          "type": "array",
          "items": {
            "$ref": "Authentication"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then\n`next_page_token` is included. To get the next set of results, call this\nmethod again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "Authentication": {
      "id": "Authentication",
      "description": "To be deprecated soon. Please use ServerTlsPolicy or ClientTlsPolicy instead.\nAuthentication is a resource that specifies how a client or server should\nauthenticate inbound or outbound connections. This resource itself does not\naffect configuration unless it is attached to a backend service,\ntarget https proxy or endpoint config selector resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the Authentication resource. It matches the pattern\n`projects\/*\/locations\/{location}\/authentications\/{authentication}`",
          "type": "string"
        },
        "description": {
          "description": "Optional. Free-text description of the resource.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the Authorization resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "transportAuthentication": {
          "description": "Optional. Peer to peer (i.e service to service communication)\nauthentication policy. If left blank, communications between\nservices are not encrypted (i.e., the TLS policy is set to OPEN).",
          "$ref": "TransportAuthentication"
        }
      }
    },
    "TransportAuthentication": {
      "id": "TransportAuthentication",
      "description": "Specification of the transport authentication policy.",
      "type": "object",
      "properties": {
        "originationTlsSettings": {
          "description": "Optional. Transport authentication policy for the originator of TLS\ntraffic. If left blank, this field will default to an\nOriginationTls policy with TlsMode set to OPEN.",
          "$ref": "OriginationTlsSettings"
        },
        "terminationTlsSettings": {
          "description": "Optional. Transport authentication policy for the terminator of TLS\ntraffic. If left blank, this field will default to an\nTerminationTls policy with TlsMode set to OPEN.",
          "$ref": "TerminationTlsSettings"
        }
      }
    },
    "OriginationTlsSettings": {
      "id": "OriginationTlsSettings",
      "description": "Specification of the origination TLS.",
      "type": "object",
      "properties": {
        "mode": {
          "description": "Required. Specifies OPEN, TLS or MTLS authentication mode.",
          "enumDescriptions": [
            "TLS mode is unspecified.",
            "Communications between services are not encrypted.",
            "Communications are secured using TLS.",
            "Communications are secured using MTLS, i.e., the server will request\nclient certificates."
          ],
          "type": "string",
          "enum": [
            "ORIGINATION_TLS_MODE_UNSPECIFIED",
            "OPEN",
            "TLS",
            "MTLS"
          ]
        },
        "sni": {
          "description": "Optional. SNI string to present to the server during TLS\nhandshake. This field is applicable only when\noriginationTls.mode is TLS or MTLS.",
          "type": "string"
        },
        "identityProvisioningContext": {
          "description": "Optional. Defines a mechanism to provision identity and certificate\nfor peer to peer authentication. Required if the mode is TLS\nor MTLS.",
          "$ref": "CertificateProvider"
        },
        "peerValidationContext": {
          "description": "Optional. Defines the mechanism to obtain the Certificate Authority\ncertificate to validate the peer certificate.  Required if\nthe mode is TLS or MTLS.",
          "$ref": "CertificateProvider"
        }
      }
    },
    "CertificateProvider": {
      "id": "CertificateProvider",
      "type": "object",
      "properties": {
        "filepath": {
          "description": "Obtain certificates and private key from a locally mounted filesystem\npath. Used only when CertificateProviderType is FROM_FILE.",
          "$ref": "TlsCertificatePaths"
        },
        "grpcEndpoint": {
          "description": "gRPC specific configuration to access the gRPC server to\nobtain the cert and private key. Used only when\nCertificateProviderType is GRPC_ENDPOINT.",
          "$ref": "GrpcEndpoint"
        }
      }
    },
    "TlsCertificatePaths": {
      "id": "TlsCertificatePaths",
      "description": "Specification of TLS certificate paths.",
      "type": "object",
      "properties": {
        "certificatePath": {
          "description": "The path to the file that has the certificate. This is the\npublic key when used in identityProvisioning and is the CA\nvalidation certificate when used for PeerValidation.",
          "type": "string"
        },
        "privateKeyPath": {
          "description": "The path to the file that has the identity certificate. Not\napplicable when attached to PeerValidation.",
          "type": "string"
        }
      }
    },
    "GrpcEndpoint": {
      "id": "GrpcEndpoint",
      "description": "Specification of the GRPC Endpoint.",
      "type": "object",
      "properties": {
        "targetUri": {
          "description": "The target URI of the gRPC endpoint. Only UDS path is supported, and\nshould start with \u201Cunix:\u201D.",
          "type": "string"
        }
      }
    },
    "TerminationTlsSettings": {
      "id": "TerminationTlsSettings",
      "description": "Specification of termination TLS settings.",
      "type": "object",
      "properties": {
        "mode": {
          "description": "Required. Specifies OPEN, TLS or MTLS authentication mode or\npermissive combinations of the above.  The permissive mode is\ntypically used during transition from one authentication mode\nto another.",
          "enumDescriptions": [
            "TLS mode is unspecified.",
            "Communications between services are not encrypted.",
            "Communications are secured using TLS.",
            "Communications are secured using MTLS (i.e., the server\nwill request client certificates.",
            "The terminator of Traffic allows either plaintext or MTLS."
          ],
          "type": "string",
          "enum": [
            "TERMINATION_TLS_MODE_UNSPECIFIED",
            "OPEN",
            "TLS",
            "MTLS",
            "OPEN_OR_MTLS"
          ]
        },
        "identityProvisioningContext": {
          "description": "Optional. Defines a mechanism to provision identity and certificate\nfor peer to peer authentication. Required if the mode is TLS\nor MTLS.",
          "$ref": "CertificateProvider"
        },
        "peerValidationContext": {
          "description": "Optional. Defines the mechanism to obtain the Certificate Authority\ncertificate to validate the peer certificate.  Required if\nthe mode is TLS or MTLS.",
          "$ref": "CertificateProvider"
        }
      }
    },
    "ListAuthorizationPoliciesResponse": {
      "id": "ListAuthorizationPoliciesResponse",
      "description": "Response returned by the ListAuthorizationPolicies method.",
      "type": "object",
      "properties": {
        "authorizationPolicies": {
          "description": "List of AuthorizationPolicies resources.",
          "type": "array",
          "items": {
            "$ref": "AuthorizationPolicy"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then\n`next_page_token` is included. To get the next set of results, call this\nmethod again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "AuthorizationPolicy": {
      "id": "AuthorizationPolicy",
      "description": "AuthorizationPolicy is a resource that specifies how a server\nshould authorize incoming connections. This resource in itself does\nnot change the configuration unless it's attached to a target https\nproxy or endpoint config selector resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the AuthorizationPolicy resource. It matches pattern\n`projects\/*\/locations\/{location}\/authorizationPolicies\/<authorization_policy>`.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Free-text description of the resource.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the AuthorizationPolicy resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "action": {
          "description": "Required. The action to take when a rule match is found. Possible values\nare \"ALLOW\" or \"DENY\".",
          "enumDescriptions": [
            "Default value.",
            "Grant access.",
            "Deny access."
          ],
          "type": "string",
          "enum": [
            "ACTION_UNSPECIFIED",
            "ALLOW",
            "DENY"
          ]
        },
        "rules": {
          "description": "Optional. List of rules to match. If not set, the action specified in the\n\u2018action\u2019 field will be applied without any additional rule\nchecks.",
          "type": "array",
          "items": {
            "$ref": "Rule"
          }
        }
      }
    },
    "Rule": {
      "id": "Rule",
      "description": "Specification of rules.",
      "type": "object",
      "properties": {
        "sources": {
          "description": "Optional. List of attributes for the traffic source. If not set, the\naction specified in the \u2018action\u2019 field will be applied\nwithout any rule checks for the source.",
          "type": "array",
          "items": {
            "$ref": "Source"
          }
        },
        "destinations": {
          "description": "Optional. List of attributes for the traffic destination. If not set,\nthe action specified in the \u2018action\u2019 field will be applied\nwithout any rule checks for the destination.",
          "type": "array",
          "items": {
            "$ref": "Destination"
          }
        }
      }
    },
    "Source": {
      "id": "Source",
      "description": "Specification of traffic source attributes.",
      "type": "object",
      "properties": {
        "principals": {
          "description": "Optional. List of peer identities to match for authorization. Each\npeer can be an exact match, or a prefix match (example,\n\u201Cnamespace\/*\u201D) or a suffix match (example,\n*\/service-account\u201D) or a presence match \u201C*\u201D.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ipBlocks": {
          "description": "Optional. List of CIDR ranges to match based on source IP\naddress. Single IP (e.g., \"1.2.3.4\") and CIDR (e.g.,\n\"1.2.3.0\/24\") are supported.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Destination": {
      "id": "Destination",
      "description": "Specification of traffic destination attributes.",
      "type": "object",
      "properties": {
        "hosts": {
          "description": "Required. List of host names to match. Matched against HOST header in\nhttp requests. Each host can be an exact match, or a prefix\nmatch (example, \u201Cmydomain.*\u201D) or a suffix match (example,\n*.myorg.com\u201D) or a presence(any) match \u201C*\u201D.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ports": {
          "description": "Required. List of destination ports to match.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint32"
          }
        },
        "paths": {
          "description": "Required. A list of HTTP paths to match. gRPC methods must be\npresented as fully-qualified name in the form of\n\"\/packageName.serviceName\/methodName\". Each path can be an\nexact match, or a prefix match (example,\n\u201C\/packageName.serviceName\/*\u201D) or a suffix match (example,\n*\/video\u201D) or a presence(any) match \u201C*\u201D.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "methods": {
          "description": "Optional. A list of HTTP methods to match. Should not be set for gRPC\nservices.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "httpHeaderMatch": {
          "description": "Optional. Match against key:value pair in http header. Provides a\nflexible match based on HTTP headers, for potentially\nadvanced use cases.",
          "$ref": "HttpHeaderMatch"
        }
      }
    },
    "HttpHeaderMatch": {
      "id": "HttpHeaderMatch",
      "description": "Specification of HTTP header match atrributes.",
      "type": "object",
      "properties": {
        "headerName": {
          "description": "Required. The name of the HTTP header to match. For matching\nagainst the HTTP request's authority, use a headerMatch\nwith the header name \":authority\". For matching a\nrequest's method, use the headerName \":method\".",
          "type": "string"
        },
        "regexMatch": {
          "description": "Required. The value of the header must match the regular expression\nspecified in regexMatch. For regular expression grammar,\nplease see: en.cppreference.com\/w\/cpp\/regex\/ecmascript\nFor matching against a port specified in the HTTP\nrequest, use a headerMatch with headerName set to Host\nand a regular expression that satisfies the RFC2616 Host\nheader's port specifier.",
          "type": "string"
        }
      }
    },
    "ListServerTlsPoliciesResponse": {
      "id": "ListServerTlsPoliciesResponse",
      "description": "Response returned by the ListServerTlsPolicies method.",
      "type": "object",
      "properties": {
        "serverTlsPolicies": {
          "description": "List of ServerTlsPolicy resources.",
          "type": "array",
          "items": {
            "$ref": "ServerTlsPolicy"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then\n`next_page_token` is included. To get the next set of results, call this\nmethod again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "ServerTlsPolicy": {
      "id": "ServerTlsPolicy",
      "description": "ServerTlsPolicy is a resource that specifies how a server should authenticate\nincoming requests. This resource itself does not affect configuration unless\nit is attached to a target https proxy or endpoint config selector resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the ServerTlsPolicy resource. It matches the pattern\n`projects\/*\/locations\/{location}\/serverTlsPolicies\/{server_tls_policy}`",
          "type": "string"
        },
        "description": {
          "description": "Optional. Free-text description of the resource.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "allowOpen": {
          "description": "Optional. Determines if server allows plaintext connections. By default, server will\ndisallow plaintext connections. If allow_open is set to true, server allows\nboth plain text and MTLS connections.",
          "type": "boolean"
        },
        "serverCertificate": {
          "description": "Required. Defines a mechanism to provision server identity (public and private keys).",
          "$ref": "GoogleCloudNetworksecurityV1alpha1CertificateProvider"
        },
        "mtlsPolicy": {
          "description": "Optional. Defines a mechanism to provision peer validation certificates for peer to\npeer authentication (Mutual TLS - mTLS). If not specified, client\ncertificate will not be requested. The connection is treated as TLS and not\nmTLS.",
          "$ref": "MTLSPolicy"
        }
      }
    },
    "GoogleCloudNetworksecurityV1alpha1CertificateProvider": {
      "id": "GoogleCloudNetworksecurityV1alpha1CertificateProvider",
      "description": "Specification of certificate provider. Defines the mechanism to obtain the\ncertificate and private key for peer to peer authentication.",
      "type": "object",
      "properties": {
        "localFilepath": {
          "description": "Obtain certificates and private key from a locally mounted\nfilesystem path.",
          "$ref": "TlsCertificateFiles"
        },
        "grpcEndpoint": {
          "description": "gRPC specific configuration to access the gRPC server to\nobtain the cert and private key.",
          "$ref": "GoogleCloudNetworksecurityV1alpha1GrpcEndpoint"
        }
      }
    },
    "TlsCertificateFiles": {
      "id": "TlsCertificateFiles",
      "description": "Specification of TLS certificate files.",
      "type": "object",
      "properties": {
        "certificatePath": {
          "description": "Required. The path to the file that has the certificate containing public key.",
          "type": "string"
        },
        "privateKeyPath": {
          "description": "Required. The path to the file that has the private key.",
          "type": "string"
        }
      }
    },
    "GoogleCloudNetworksecurityV1alpha1GrpcEndpoint": {
      "id": "GoogleCloudNetworksecurityV1alpha1GrpcEndpoint",
      "description": "Specification of the GRPC Endpoint.",
      "type": "object",
      "properties": {
        "targetUri": {
          "description": "Required. The target URI of the gRPC endpoint. Only UDS path is supported, and\nshould start with \u201Cunix:\u201D.",
          "type": "string"
        }
      }
    },
    "MTLSPolicy": {
      "id": "MTLSPolicy",
      "description": "Specification of the MTLSPolicy.",
      "type": "object",
      "properties": {
        "clientValidationCa": {
          "description": "Required. Defines the mechanism to obtain the Certificate Authority certificate to\nvalidate the client certificate.",
          "type": "array",
          "items": {
            "$ref": "ValidationCA"
          }
        }
      }
    },
    "ValidationCA": {
      "id": "ValidationCA",
      "description": "Specification of ValidationCA. Defines the mechanism to obtain the\nCertificate Authority certificate to validate the peer certificate.",
      "type": "object",
      "properties": {
        "caCertPath": {
          "description": "The path to the file holding the CA certificate to validate the client or\nserver certificate.",
          "type": "string"
        },
        "grpcEndpoint": {
          "description": "gRPC specific configuration to access the gRPC server to\nobtain the CA certificate.",
          "$ref": "GoogleCloudNetworksecurityV1alpha1GrpcEndpoint"
        }
      }
    },
    "ListClientTlsPoliciesResponse": {
      "id": "ListClientTlsPoliciesResponse",
      "description": "Response returned by the ListClientTlsPolicies method.",
      "type": "object",
      "properties": {
        "clientTlsPolicies": {
          "description": "List of ClientTlsPolicy resources.",
          "type": "array",
          "items": {
            "$ref": "ClientTlsPolicy"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then\n`next_page_token` is included. To get the next set of results, call this\nmethod again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "ClientTlsPolicy": {
      "id": "ClientTlsPolicy",
      "description": "ClientTlsPolicy is a resource that specifies how a client should authenticate\nconnections to backends of a service. This resource itself does not affect\nconfiguration unless it is attached to a backend service resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the ClientTlsPolicy resource. It matches the pattern\n`projects\/*\/locations\/{location}\/clientTlsPolicies\/{client_tls_policy}`",
          "type": "string"
        },
        "description": {
          "description": "Optional. Free-text description of the resource.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sni": {
          "description": "Optional. Server Name Indication string to present to the server during TLS\nhandshake. E.g: \"secure.example.com\".",
          "type": "string"
        },
        "clientCertificate": {
          "description": "Optional. Defines a mechanism to provision client identity (public and private keys)\nfor peer to peer authentication. The presence of this dictates mTLS.",
          "$ref": "GoogleCloudNetworksecurityV1alpha1CertificateProvider"
        },
        "serverValidationCa": {
          "description": "Required. Defines the mechanism to obtain the Certificate Authority certificate to\nvalidate the server certificate.",
          "type": "array",
          "items": {
            "$ref": "ValidationCA"
          }
        }
      }
    },
    "GoogleIamV1SetIamPolicyRequest": {
      "id": "GoogleIamV1SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
          "$ref": "GoogleIamV1Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\n\n`paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "GoogleIamV1Policy": {
      "id": "GoogleIamV1Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nFor some types of Google Cloud resources, a `binding` can also specify a\n`condition`, which is a logical expression that allows access to a resource\nonly if the expression evaluates to `true`. A condition can add constraints\nbased on attributes of the request, the resource, or both. To learn which\nresources support conditions in their IAM policies, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles\/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles\/resourcemanager.organizationViewer\",\n          \"members\": [\n            \"user:eve@example.com\"\n          ],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles\/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles\/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "GoogleIamV1Binding": {
      "id": "GoogleIamV1Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding.\n\nIf the condition evaluates to `true`, then this binding applies to the\ncurrent request.\n\nIf the condition evaluates to `false`, then this binding does not apply to\nthe current request. However, a different role binding might grant the same\nrole to one or more of the members in this binding.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https:\/\/github.com\/google\/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() < 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language\nsyntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "GoogleIamV1AuditConfig": {
      "id": "GoogleIamV1AuditConfig",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\",\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\"\n            },\n            {\n              \"log_type\": \"ADMIN_READ\"\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\",\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\"\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          }
        }
      }
    },
    "GoogleIamV1AuditLogConfig": {
      "id": "GoogleIamV1AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\"\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleIamV1TestIamPermissionsRequest": {
      "id": "GoogleIamV1TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleIamV1TestIamPermissionsResponse": {
      "id": "GoogleIamV1TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation\nof the operation. Operations that have successfully been cancelled\nhave Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "networksecurity.projects.locations.list",
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "networksecurity.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "networksecurity.projects.locations.operations.list",
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users\/*\/operations`. To\noverride the binding, API services can add a binding such as\n`\"\/v1\/{name=users\/*}\/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "networksecurity.projects.locations.operations.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
                },
                "delete": {
                  "id": "networksecurity.projects.locations.operations.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "networksecurity.projects.locations.operations.cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`."
                }
              }
            },
            "authentication": {
              "methods": {
                "list": {
                  "id": "networksecurity.projects.locations.authentication.list",
                  "path": "v1alpha1/{+parent}/authentication",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authentication",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListAuthenticationsResponse`\nIndicates that this is a continuation of a prior `ListAuthentications`\ncall, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListAuthenticationResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Authentication in a given project and location."
                },
                "get": {
                  "id": "networksecurity.projects.locations.authentication.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authentication/{authenticationId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the Authentication to get. Must be in the format\n`projects\/*\/locations\/{location}\/authentications\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/authentication\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Authentication"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Authentication."
                },
                "create": {
                  "id": "networksecurity.projects.locations.authentication.create",
                  "path": "v1alpha1/{+parent}/authentication",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authentication",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the Authentication. Must be in the\nformat `projects\/*\/locations\/{location}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "authenticationId": {
                      "description": "Required. Short name of the Authentication resource to be created.\nThis value should be 1-63 characters, and valid characters\nare \/a-z-\/.\nE.g. \"NewAuthentication\".",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Authentication"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Authentication in a given project and location."
                },
                "patch": {
                  "id": "networksecurity.projects.locations.authentication.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authentication/{authenticationId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the Authentication resource. It matches the pattern\n`projects\/*\/locations\/{location}\/authentications\/{authentication}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/authentication\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the\nAuthentication resource by the update.\nThe fields specified in the update_mask are relative to the resource, not\nthe full request. A field will be overwritten if it is in the mask. If the\nuser does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Authentication"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single Authentication."
                },
                "delete": {
                  "id": "networksecurity.projects.locations.authentication.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authentication/{authenticationId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the Authentication to delete. Must be in the format\n`projects\/*\/locations\/{location}\/authentication\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/authentication\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Authentication."
                },
                "setIamPolicy": {
                  "id": "networksecurity.projects.locations.authentication.setIamPolicy",
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authentication/{authenticationId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/authentication\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networksecurity.projects.locations.authentication.getIamPolicy",
                  "path": "v1alpha1/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authentication/{authenticationId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/authentication\/[^\/]+$",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset."
                },
                "testIamPermissions": {
                  "id": "networksecurity.projects.locations.authentication.testIamPermissions",
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authentication/{authenticationId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/authentication\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning."
                }
              }
            },
            "authorizationPolicies": {
              "methods": {
                "list": {
                  "id": "networksecurity.projects.locations.authorizationPolicies.list",
                  "path": "v1alpha1/{+parent}/authorizationPolicies",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authorizationPolicies",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the AuthorizationPolicies\nshould be listed, specified in the format\n`projects\/*\/locations\/{location}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of AuthorizationPolicies to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last\n`ListAuthorizationPoliciesResponse` Indicates that this is a\ncontinuation of a prior `ListAuthorizationPolicies` call, and\nthat the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListAuthorizationPoliciesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists AuthorizationPolicies in a given project and location."
                },
                "get": {
                  "id": "networksecurity.projects.locations.authorizationPolicies.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authorizationPolicies/{authorizationPoliciesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the AuthorizationPolicy to get. Must be in the format\n`projects\/*\/locations\/{location}\/authorizationPolicies\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/authorizationPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "AuthorizationPolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single AuthorizationPolicy."
                },
                "create": {
                  "id": "networksecurity.projects.locations.authorizationPolicies.create",
                  "path": "v1alpha1/{+parent}/authorizationPolicies",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authorizationPolicies",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the AuthorizationPolicy. Must be in the\nformat `projects\/*\/locations\/{location}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "authorizationPolicyId": {
                      "description": "Required. Short name of the AuthorizationPolicy resource to be created.\nThis value should be 1-63 characters long, containing only\nletters, numbers, hyphens, and underscores, and should not start\nwith a number. E.g. \"authz_policy\".",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "AuthorizationPolicy"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new AuthorizationPolicy in a given project and location."
                },
                "patch": {
                  "id": "networksecurity.projects.locations.authorizationPolicies.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authorizationPolicies/{authorizationPoliciesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the AuthorizationPolicy resource. It matches pattern\n`projects\/*\/locations\/{location}\/authorizationPolicies\/<authorization_policy>`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/authorizationPolicies\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the\nAuthorizationPolicy resource by the update.\nThe fields specified in the update_mask are relative to the resource, not\nthe full request. A field will be overwritten if it is in the mask. If the\nuser does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "AuthorizationPolicy"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single AuthorizationPolicy."
                },
                "delete": {
                  "id": "networksecurity.projects.locations.authorizationPolicies.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authorizationPolicies/{authorizationPoliciesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the AuthorizationPolicy to delete. Must be in the format\n`projects\/*\/locations\/{location}\/authorizationPolicies\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/authorizationPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single AuthorizationPolicy."
                },
                "setIamPolicy": {
                  "id": "networksecurity.projects.locations.authorizationPolicies.setIamPolicy",
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authorizationPolicies/{authorizationPoliciesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/authorizationPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networksecurity.projects.locations.authorizationPolicies.getIamPolicy",
                  "path": "v1alpha1/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authorizationPolicies/{authorizationPoliciesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/authorizationPolicies\/[^\/]+$",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset."
                },
                "testIamPermissions": {
                  "id": "networksecurity.projects.locations.authorizationPolicies.testIamPermissions",
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authorizationPolicies/{authorizationPoliciesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/authorizationPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning."
                }
              }
            },
            "serverTlsPolicies": {
              "methods": {
                "list": {
                  "id": "networksecurity.projects.locations.serverTlsPolicies.list",
                  "path": "v1alpha1/{+parent}/serverTlsPolicies",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/serverTlsPolicies",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the ServerTlsPolicies should\nbe listed, specified in the format `projects\/*\/locations\/{location}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of ServerTlsPolicies to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListServerTlsPoliciesResponse`\nIndicates that this is a continuation of a prior\n`ListServerTlsPolicies` call, and that the system\nshould return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListServerTlsPoliciesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists ServerTlsPolicies in a given project and location."
                },
                "get": {
                  "id": "networksecurity.projects.locations.serverTlsPolicies.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/serverTlsPolicies/{serverTlsPoliciesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the ServerTlsPolicy to get. Must be in the format\n`projects\/*\/locations\/{location}\/serverTlsPolicies\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/serverTlsPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ServerTlsPolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single ServerTlsPolicy."
                },
                "create": {
                  "id": "networksecurity.projects.locations.serverTlsPolicies.create",
                  "path": "v1alpha1/{+parent}/serverTlsPolicies",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/serverTlsPolicies",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the ServerTlsPolicy. Must be in\nthe format `projects\/*\/locations\/{location}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "serverTlsPolicyId": {
                      "description": "Required. Short name of the ServerTlsPolicy resource to be created. This value should\nbe 1-63 characters long, containing only letters, numbers, hyphens, and\nunderscores, and should not start with a number. E.g. \"server_mtls_policy\".",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ServerTlsPolicy"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new ServerTlsPolicy in a given project and location."
                },
                "patch": {
                  "id": "networksecurity.projects.locations.serverTlsPolicies.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/serverTlsPolicies/{serverTlsPoliciesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the ServerTlsPolicy resource. It matches the pattern\n`projects\/*\/locations\/{location}\/serverTlsPolicies\/{server_tls_policy}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/serverTlsPolicies\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the\nServerTlsPolicy resource by the update.  The fields\nspecified in the update_mask are relative to the resource, not\nthe full request. A field will be overwritten if it is in the\nmask. If the user does not provide a mask then all fields will be\noverwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ServerTlsPolicy"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single ServerTlsPolicy."
                },
                "delete": {
                  "id": "networksecurity.projects.locations.serverTlsPolicies.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/serverTlsPolicies/{serverTlsPoliciesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the ServerTlsPolicy to delete. Must be in\nthe format `projects\/*\/locations\/{location}\/serverTlsPolicies\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/serverTlsPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single ServerTlsPolicy."
                },
                "setIamPolicy": {
                  "id": "networksecurity.projects.locations.serverTlsPolicies.setIamPolicy",
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/serverTlsPolicies/{serverTlsPoliciesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/serverTlsPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networksecurity.projects.locations.serverTlsPolicies.getIamPolicy",
                  "path": "v1alpha1/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/serverTlsPolicies/{serverTlsPoliciesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/serverTlsPolicies\/[^\/]+$",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset."
                },
                "testIamPermissions": {
                  "id": "networksecurity.projects.locations.serverTlsPolicies.testIamPermissions",
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/serverTlsPolicies/{serverTlsPoliciesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/serverTlsPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning."
                }
              }
            },
            "clientTlsPolicies": {
              "methods": {
                "list": {
                  "id": "networksecurity.projects.locations.clientTlsPolicies.list",
                  "path": "v1alpha1/{+parent}/clientTlsPolicies",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clientTlsPolicies",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the ClientTlsPolicies should\nbe listed, specified in the format `projects\/*\/locations\/{location}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of ClientTlsPolicies to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListClientTlsPoliciesResponse`\nIndicates that this is a continuation of a prior\n`ListClientTlsPolicies` call, and that the system\nshould return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListClientTlsPoliciesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists ClientTlsPolicies in a given project and location."
                },
                "get": {
                  "id": "networksecurity.projects.locations.clientTlsPolicies.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clientTlsPolicies/{clientTlsPoliciesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the ClientTlsPolicy to get. Must be in the format\n`projects\/*\/locations\/{location}\/clientTlsPolicies\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clientTlsPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ClientTlsPolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single ClientTlsPolicy."
                },
                "create": {
                  "id": "networksecurity.projects.locations.clientTlsPolicies.create",
                  "path": "v1alpha1/{+parent}/clientTlsPolicies",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clientTlsPolicies",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the ClientTlsPolicy. Must be in\nthe format `projects\/*\/locations\/{location}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "clientTlsPolicyId": {
                      "description": "Required. Short name of the ClientTlsPolicy resource to be created. This value should\nbe 1-63 characters long, containing only letters, numbers, hyphens, and\nunderscores, and should not start with a number. E.g. \"client_mtls_policy\".",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ClientTlsPolicy"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new ClientTlsPolicy in a given project and location."
                },
                "patch": {
                  "id": "networksecurity.projects.locations.clientTlsPolicies.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clientTlsPolicies/{clientTlsPoliciesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the ClientTlsPolicy resource. It matches the pattern\n`projects\/*\/locations\/{location}\/clientTlsPolicies\/{client_tls_policy}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clientTlsPolicies\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the\nClientTlsPolicy resource by the update.  The fields\nspecified in the update_mask are relative to the resource, not\nthe full request. A field will be overwritten if it is in the\nmask. If the user does not provide a mask then all fields will be\noverwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ClientTlsPolicy"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single ClientTlsPolicy."
                },
                "delete": {
                  "id": "networksecurity.projects.locations.clientTlsPolicies.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clientTlsPolicies/{clientTlsPoliciesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the ClientTlsPolicy to delete. Must be in\nthe format `projects\/*\/locations\/{location}\/clientTlsPolicies\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clientTlsPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single ClientTlsPolicy."
                },
                "setIamPolicy": {
                  "id": "networksecurity.projects.locations.clientTlsPolicies.setIamPolicy",
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clientTlsPolicies/{clientTlsPoliciesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clientTlsPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networksecurity.projects.locations.clientTlsPolicies.getIamPolicy",
                  "path": "v1alpha1/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clientTlsPolicies/{clientTlsPoliciesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clientTlsPolicies\/[^\/]+$",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset."
                },
                "testIamPermissions": {
                  "id": "networksecurity.projects.locations.clientTlsPolicies.testIamPermissions",
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clientTlsPolicies/{clientTlsPoliciesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clientTlsPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}