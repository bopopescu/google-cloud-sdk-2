{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "sddc:v1alpha1",
  "name": "sddc",
  "canonicalName": "Software Defined Datacenter",
  "version": "v1alpha1",
  "revision": "0",
  "title": "SDDC API",
  "description": "Software Defined Datacenter",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/vmware/",
  "protocol": "rest",
  "rootUrl": "https://sddc.googleapis.com/",
  "mtlsRootUrl": "https://sddc.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://sddc.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`\/`Create`\/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListClustersResponse": {
      "id": "ListClustersResponse",
      "type": "object",
      "properties": {
        "clusters": {
          "description": "A list of SDDC clusters.",
          "type": "array",
          "items": {
            "$ref": "Cluster"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be send as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "List of Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Cluster": {
      "id": "Cluster",
      "description": "A cluster in a cluater group. Cluster is a regional resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name of this Cluster.\nResource names are schemeless URI's that follow the conventions in\nhttps:\/\/cloud.google.com\/apis\/design\/resource_names\nFor example,\n`projects\/my-project\/locations\/us-central1\/clusterGroups\/my-group\/clusters\/my-cluster`",
          "type": "string"
        },
        "nodeType": {
          "description": "Required. The baremetal node type used to create a VMWare cluster. The only supported\nvalue is c1-highmem-72-metal.",
          "type": "string"
        },
        "nodeCount": {
          "description": "Required. Number of bare metal nodes in this cluster.",
          "type": "integer",
          "format": "int32"
        },
        "nodes": {
          "description": "Output only. Nodes in the cluster.",
          "type": "array",
          "items": {
            "$ref": "Node"
          }
        },
        "labels": {
          "description": "Labels are a way to attach lightweight metadata to resources for filtering\nand querying resource data. No more than 64 user labels can be associated\nwith each resource.  Label keys and values can be no longer than 63\ncharacters, can only contain lowercase letters, numeric characters,\nunderscores and dashes, where label keys must start with a letter and\ninternational characters are allowed. The empty string is a valid value.\n\nLabels are set on creation and updated like any other field. Specifically,\nto add a new label, you would need to provide all of the existing labels\nalong with the new label. If you only provide a map with the new label, all\nof the old labels will be removed (probably not what is desired).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "defaultZone": {
          "description": "Required. Default zone to host nodes.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Creation time of the resource.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Update time of the resource.",
          "type": "string",
          "format": "google-datetime"
        },
        "status": {
          "description": "Output only. Deprecated. Use state instead.\nStatus of the resource.",
          "type": "string"
        },
        "state": {
          "description": "Output only. State of the resource.",
          "enumDescriptions": [
            "The default value. This value should never be used.",
            "The cluster is ready.",
            "The cluster is being created.",
            "The cluster is being updated.",
            "The cluster is being deleted."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "UPDATING",
            "DELETING"
          ]
        },
        "management": {
          "description": "If the resource to be created a management cluster or not. There can only\nbe one management cluster in an SDDC and it has to be the first one.",
          "type": "boolean"
        }
      }
    },
    "Node": {
      "id": "Node",
      "description": "A node in a cluster.",
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Output only. User-provided id of the node.",
          "type": "string"
        },
        "type": {
          "description": "Output only. Type of the node.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Creation time of the node.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Update time of the node.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ListClusterGroupBackupsResponse": {
      "id": "ListClusterGroupBackupsResponse",
      "type": "object",
      "properties": {
        "clusterGroupBackups": {
          "description": "A list of SDDC cluster group backups.",
          "type": "array",
          "items": {
            "$ref": "ClusterGroupBackup"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be send as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "List of Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ClusterGroupBackup": {
      "id": "ClusterGroupBackup",
      "description": "Backup resource of the ClusterGroup.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name of this ClusterGroupBackup.\nResource names are schemeless URI's that follow the conventions in\nhttps:\/\/cloud.google.com\/apis\/design\/resource_names\nFor example,\n`projects\/my-project\/locations\/us-central1\/clusterGroupBackups\/my-backup`",
          "type": "string"
        },
        "labels": {
          "description": "Labels are a way to attach lightweight metadata to resources for filtering\nand querying resource data. No more than 64 user labels can be associated\nwith each resource.  Label keys and values can be no longer than 63\ncharacters, can only contain lowercase letters, numeric characters,\nunderscores and dashes, where label keys must start with a letter and\ninternational characters are allowed. The empty string is a valid value.\n\nLabels are set on creation and updated like any other field. Specifically,\nto add a new label, you would need to provide all of the existing labels\nalong with the new label. If you only provide a map with the new label, all\nof the old labels will be removed (probably not what is desired).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "Output only. Creation time of the resource.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Update time of the resource.",
          "type": "string",
          "format": "google-datetime"
        },
        "clusterGroupId": {
          "description": "Identity of the ClusterGroup of which this resource is a backup.",
          "type": "string"
        }
      }
    },
    "ListClusterGroupsResponse": {
      "id": "ListClusterGroupsResponse",
      "type": "object",
      "properties": {
        "clusterGroups": {
          "description": "A list of SDDC cluster groups.",
          "type": "array",
          "items": {
            "$ref": "ClusterGroup"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be send as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "List of Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ClusterGroup": {
      "id": "ClusterGroup",
      "description": "A cluster group resource. ClusterGroup is a regional resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name of this ClusterGroup.\nResource names are schemeless URI's that follow the conventions in\nhttps:\/\/cloud.google.com\/apis\/design\/resource_names\nFor example,\n`projects\/my-project\/locations\/us-central1\/clusterGroups\/my-group`",
          "type": "string"
        },
        "labels": {
          "description": "Labels are a way to attach lightweight metadata to resources for filtering\nand querying resource data. No more than 64 user labels can be associated\nwith each resource.  Label keys and values can be no longer than 63\ncharacters, can only contain lowercase letters, numeric characters,\nunderscores and dashes, where label keys must start with a letter and\ninternational characters are allowed. The empty string is a valid value.\n\nLabels are set on creation and updated like any other field. Specifically,\nto add a new label, you would need to provide all of the existing labels\nalong with the new label. If you only provide a map with the new label, all\nof the old labels will be removed (probably not what is desired).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "The description of this resource.",
          "type": "string"
        },
        "vpcSelfLink": {
          "description": "VPC self link",
          "type": "string"
        },
        "networkConfig": {
          "description": "NetworkConfig passed in the param.",
          "$ref": "NetworkConfig"
        },
        "managementIp": {
          "description": "Management ip",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Creation time of the resource.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Update time of the resource.",
          "type": "string",
          "format": "google-datetime"
        },
        "status": {
          "description": "Output only. Deprecated. Use state instead. Status of the resource.",
          "type": "string"
        },
        "state": {
          "description": "State of the resource.",
          "enumDescriptions": [
            "The default value. This value should never be used.",
            "The cluster group is ready.",
            "The cluster group is being created.",
            "The cluster group is being deleted."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING"
          ]
        },
        "vcenter": {
          "description": "Output only. vCenter information.",
          "$ref": "Vcenter"
        },
        "nsx": {
          "description": "Output only. Nsx information.",
          "$ref": "Nsx"
        }
      }
    },
    "NetworkConfig": {
      "id": "NetworkConfig",
      "description": "Network configuration in the consumer project with which the peering has to\nbe done.",
      "type": "object",
      "properties": {
        "network": {
          "description": "name of the network in the consumer project with which the tenant project\nwill be  peered. In the case of shared VPC where the network lives inside\nanother project the network should should be provided in the form of\n\/project\/{host_project_id}\/global\/networks\/{network}",
          "type": "string"
        },
        "externalIpAccess": {
          "description": "controls if vCenter and NSX can be accessed via internet.\n- FQDNs will resolve to the allocated external IPs for sddc domain but\nremains mapping to the internal ip within consumer subnets.\n- NAT will be set up on NSX for external ip ingress traffic.\n- users need to manually configure NSX firewall to allow HTTPs traffic.",
          "type": "boolean"
        },
        "managementCidr": {
          "description": "Management CIDR used by VMWare management applicances.",
          "type": "string"
        },
        "workloadCidr": {
          "description": "Workload CIDR used by VMWare workload VMs.",
          "type": "string"
        }
      }
    },
    "Vcenter": {
      "id": "Vcenter",
      "description": "vCenter description of a cluster group",
      "type": "object",
      "properties": {
        "clientUrl": {
          "description": "vCenter client URL.",
          "type": "string"
        },
        "serverExplorerUrl": {
          "description": "vCenter server explorer URL.",
          "type": "string"
        },
        "initialUsername": {
          "description": "vCenter initial username.",
          "type": "string"
        },
        "initialPassword": {
          "description": "vCenter initial password.",
          "type": "string"
        },
        "internalIp": {
          "description": "vCenter internal address.",
          "type": "string"
        },
        "externalIp": {
          "description": "vCenter external address when access is enabled.",
          "type": "string"
        }
      }
    },
    "Nsx": {
      "id": "Nsx",
      "description": "Nsx description of a cluster group",
      "type": "object",
      "properties": {
        "clientUrl": {
          "description": "NSX client URL.",
          "type": "string"
        },
        "serverExplorerUrl": {
          "description": "NSX server explorer URL.",
          "type": "string"
        },
        "initialUsername": {
          "description": "NSX initial username.",
          "type": "string"
        },
        "initialPassword": {
          "description": "NSX initial password.",
          "type": "string"
        },
        "internalIp": {
          "description": "NSX internal address.",
          "type": "string"
        },
        "externalIp": {
          "description": "NSX external address when access is enabled.",
          "type": "string"
        }
      }
    },
    "AddNodesRequest": {
      "id": "AddNodesRequest",
      "description": "Request for adding count of nodes to the given cluster.",
      "type": "object",
      "properties": {
        "nodeCount": {
          "description": "Required. Number of bare metal nodes to add.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RemoveNodeRequest": {
      "id": "RemoveNodeRequest",
      "type": "object",
      "properties": {
        "cluster": {
          "description": "Required. Deprecated. Use the cluster_name instead.\nThe cluster from which the node is removed.",
          "$ref": "Cluster"
        },
        "nodeName": {
          "description": "Required. Deprecated, please use the node property instead.\nThe name of the node to be removed.",
          "type": "string"
        },
        "zone": {
          "description": "Required. The zone where the node belongs to.",
          "type": "string"
        },
        "clusterName": {
          "description": "Required. The cluster from which the node is removed.",
          "type": "string"
        },
        "node": {
          "description": "Required. The name of the node to be removed.",
          "type": "string"
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\n\n`paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nFor some types of Google Cloud resources, a `binding` can also specify a\n`condition`, which is a logical expression that allows access to a resource\nonly if the expression evaluates to `true`. A condition can add constraints\nbased on attributes of the request, the resource, or both. To learn which\nresources support conditions in their IAM policies, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles\/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles\/resourcemanager.organizationViewer\",\n          \"members\": [\n            \"user:eve@example.com\"\n          ],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles\/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles\/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "rules": {
          "description": "If more than one rule is specified, the rules are applied in the following\nmanner:\n- All matching LOG rules are always applied.\n- If any DENY\/DENY_WITH_LOG rule matches, permission is denied.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if any ALLOW\/ALLOW_WITH_LOG rule matches, permission is\n  granted.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if no rule applies, permission is denied.",
          "type": "array",
          "items": {
            "$ref": "Rule"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        },
        "iamOwned": {
          "type": "boolean"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding.\n\nIf the condition evaluates to `true`, then this binding applies to the\ncurrent request.\n\nIf the condition evaluates to `false`, then this binding does not apply to\nthe current request. However, a different role binding might grant the same\nrole to one or more of the members in this binding.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https:\/\/github.com\/google\/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() < 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language\nsyntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\",\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\"\n            },\n            {\n              \"log_type\": \"ADMIN_READ\"\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\",\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\"\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\"\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignoreChildExemptions": {
          "type": "boolean"
        }
      }
    },
    "Rule": {
      "id": "Rule",
      "description": "A rule to be applied in a Policy.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Human-readable description of the rule.",
          "type": "string"
        },
        "permissions": {
          "description": "A permission is a string of form '<service>.<resource type>.<verb>'\n(e.g., 'storage.buckets.list'). A value of '*' matches all permissions,\nand a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "description": "Required",
          "enumDescriptions": [
            "Default no action.",
            "Matching 'Entries' grant access.",
            "Matching 'Entries' grant access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' deny access.",
            "Matching 'Entries' deny access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' tell IAM.Check callers to generate logs."
          ],
          "type": "string",
          "enum": [
            "NO_ACTION",
            "ALLOW",
            "ALLOW_WITH_LOG",
            "DENY",
            "DENY_WITH_LOG",
            "LOG"
          ]
        },
        "in": {
          "description": "If one or more 'in' clauses are specified, the rule matches if\nthe PRINCIPAL\/AUTHORITY_SELECTOR is in at least one of these entries.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notIn": {
          "description": "If one or more 'not_in' clauses are specified, the rule matches\nif the PRINCIPAL\/AUTHORITY_SELECTOR is in none of the entries.\nThe format for in and not_in entries can be found at in the Local IAM\ndocumentation (see go\/local-iam#features).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conditions": {
          "description": "Additional restrictions that must be met. All conditions must pass for the\nrule to match.",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "logConfig": {
          "description": "The config returned to callers of tech.iam.IAM.CheckPolicy for any entries\nthat match the LOG action.",
          "type": "array",
          "items": {
            "$ref": "LogConfig"
          }
        }
      }
    },
    "Condition": {
      "id": "Condition",
      "description": "A condition to be met.",
      "type": "object",
      "properties": {
        "iam": {
          "description": "Trusted attributes supplied by the IAM system.",
          "enumDescriptions": [
            "Default non-attribute.",
            "Either principal or (if present) authority selector.",
            "The principal (even if an authority selector is present), which\nmust only be used for attribution, not authorization.",
            "Any of the security realms in the IAMContext (go\/security-realms).\nWhen used with IN, the condition indicates \"any of the request's realms\nmatch one of the given values; with NOT_IN, \"none of the realms match\nany of the given values\". Note that a value can be:\n - 'self' (i.e., allow connections from clients that are in the same\n security realm)\n - 'self:cloud-region' (i.e., allow connections from clients that are in\n the same cloud region)\n - 'guardians' (i.e., allow connections from its guardian realms. See\n go\/security-realms-glossary#guardian for more information.)\n - a realm (e.g., 'campus-abc')\n - a realm group (e.g., 'realms-for-borg-cell-xx', see: go\/realm-groups)\nA match is determined by a realm group\nmembership check performed by a RealmAclRep object (go\/realm-acl-howto).\nIt is not permitted to grant access based on the *absence* of a realm, so\nrealm conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN\nor DENY\/NOT_IN).",
            "An approver (distinct from the requester) that has authorized this\nrequest.\nWhen used with IN, the condition indicates that one of the approvers\nassociated with the request matches the specified principal, or is a\nmember of the specified group. Approvers can only grant additional\naccess, and are thus only used in a strictly positive context\n(e.g. ALLOW\/IN or DENY\/NOT_IN).",
            "What types of justifications have been supplied with this request.\nString values should match enum names from\nsecurity.credentials.JustificationType, e.g. \"MANUAL_STRING\". It is not\npermitted to grant access based on the *absence* of a justification, so\njustification conditions can only be used in a \"positive\" context\n(e.g., ALLOW\/IN or DENY\/NOT_IN).\n\nMultiple justifications, e.g., a Buganizer ID and a manually-entered\nreason, are normal and supported.",
            "What type of credentials have been supplied with this request.\nString values should match enum names from\nsecurity_loas_l2.CredentialsType - currently, only CREDS_TYPE_EMERGENCY\nis supported.\nIt is not permitted to grant access based on the *absence* of a\ncredentials type, so the conditions can only be used in a \"positive\"\ncontext (e.g., ALLOW\/IN or DENY\/NOT_IN)."
          ],
          "type": "string",
          "enum": [
            "NO_ATTR",
            "AUTHORITY",
            "ATTRIBUTION",
            "SECURITY_REALM",
            "APPROVER",
            "JUSTIFICATION_TYPE",
            "CREDENTIALS_TYPE"
          ]
        },
        "sys": {
          "description": "Trusted attributes supplied by any service that owns resources and uses\nthe IAM system for access control.",
          "enumDescriptions": [
            "Default non-attribute type",
            "Region of the resource",
            "Service name",
            "Resource name",
            "IP address of the caller"
          ],
          "type": "string",
          "enum": [
            "NO_ATTR",
            "REGION",
            "SERVICE",
            "NAME",
            "IP"
          ]
        },
        "svc": {
          "description": "Trusted attributes discharged by the service.",
          "type": "string"
        },
        "op": {
          "description": "An operator to apply the subject with.",
          "enumDescriptions": [
            "Default no-op.",
            "DEPRECATED. Use IN instead.",
            "DEPRECATED. Use NOT_IN instead.",
            "The condition is true if the subject (or any element of it if it is\na set) matches any of the supplied values.",
            "The condition is true if the subject (or every element of it if it is\na set) matches none of the supplied values.",
            "Subject is discharged"
          ],
          "type": "string",
          "enum": [
            "NO_OP",
            "EQUALS",
            "NOT_EQUALS",
            "IN",
            "NOT_IN",
            "DISCHARGED"
          ]
        },
        "values": {
          "description": "The objects of the condition.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LogConfig": {
      "id": "LogConfig",
      "description": "Specifies what kind of log the caller must write",
      "type": "object",
      "properties": {
        "counter": {
          "description": "Counter options.",
          "$ref": "CounterOptions"
        },
        "dataAccess": {
          "description": "Data access options.",
          "$ref": "DataAccessOptions"
        },
        "cloudAudit": {
          "description": "Cloud audit options.",
          "$ref": "CloudAuditOptions"
        }
      }
    },
    "CounterOptions": {
      "id": "CounterOptions",
      "description": "Increment a streamz counter with the specified metric and field names.\n\nMetric names should start with a '\/', generally be lowercase-only,\nand end in \"_count\". Field names should not contain an initial slash.\nThe actual exported metric names will have \"\/iam\/policy\" prepended.\n\nField names correspond to IAM request parameters and field values are\ntheir respective values.\n\nSupported field names:\n   - \"authority\", which is \"[token]\" if IAMContext.token is present,\n     otherwise the value of IAMContext.authority_selector if present, and\n     otherwise a representation of IAMContext.principal; or\n   - \"iam_principal\", a representation of IAMContext.principal even if a\n     token or authority selector is present; or\n   - \"\" (empty string), resulting in a counter with no fields.\n\nExamples:\n  counter { metric: \"\/debug_access_count\"  field: \"iam_principal\" }\n  ==> increment counter \/iam\/policy\/debug_access_count\n                        {iam_principal=[value of IAMContext.principal]}",
      "type": "object",
      "properties": {
        "metric": {
          "description": "The metric to update.",
          "type": "string"
        },
        "field": {
          "description": "The field value to attribute.",
          "type": "string"
        },
        "customFields": {
          "description": "Custom fields.",
          "type": "array",
          "items": {
            "$ref": "CustomField"
          }
        }
      }
    },
    "CustomField": {
      "id": "CustomField",
      "description": "Custom fields.\nThese can be used to create a counter with arbitrary field\/value\npairs.\nSee: go\/rpcsp-custom-fields.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name is the field name.",
          "type": "string"
        },
        "value": {
          "description": "Value is the field value. It is important that in contrast to the\nCounterOptions.field, the value here is a constant that is not\nderived from the IAMContext.",
          "type": "string"
        }
      }
    },
    "DataAccessOptions": {
      "id": "DataAccessOptions",
      "description": "Write a Data Access (Gin) log",
      "type": "object",
      "properties": {
        "logMode": {
          "enumDescriptions": [
            "Client is not required to write a partial Gin log immediately after\nthe authorization check. If client chooses to write one and it fails,\nclient may either fail open (allow the operation to continue) or\nfail closed (handle as a DENY outcome).",
            "The application's operation in the context of which this authorization\ncheck is being made may only be performed if it is successfully logged\nto Gin. For instance, the authorization library may satisfy this\nobligation by emitting a partial log entry at authorization check time\nand only returning ALLOW to the application if it succeeds.\n\nIf a matching Rule has this directive, but the client has not indicated\nthat it will honor such requirements, then the IAM check will result in\nauthorization failure by setting CheckPolicyResponse.success=false."
          ],
          "type": "string",
          "enum": [
            "LOG_MODE_UNSPECIFIED",
            "LOG_FAIL_CLOSED"
          ]
        }
      }
    },
    "CloudAuditOptions": {
      "id": "CloudAuditOptions",
      "description": "Write a Cloud Audit log",
      "type": "object",
      "properties": {
        "logName": {
          "description": "The log_name to populate in the Cloud Audit Record.",
          "enumDescriptions": [
            "Default. Should not be used.",
            "Corresponds to \"cloudaudit.googleapis.com\/activity\"",
            "Corresponds to \"cloudaudit.googleapis.com\/data_access\""
          ],
          "type": "string",
          "enum": [
            "UNSPECIFIED_LOG_NAME",
            "ADMIN_ACTIVITY",
            "DATA_ACCESS"
          ]
        },
        "authorizationLoggingOptions": {
          "description": "Information used by the Cloud Audit Logging pipeline.",
          "$ref": "AuthorizationLoggingOptions"
        }
      }
    },
    "AuthorizationLoggingOptions": {
      "id": "AuthorizationLoggingOptions",
      "description": "Authorization-related information used by Cloud Audit Logging.",
      "type": "object",
      "properties": {
        "permissionType": {
          "description": "The type of the permission that was checked.",
          "enumDescriptions": [
            "Default. Should not be used.",
            "A read of admin (meta) data.",
            "A write of admin (meta) data.",
            "A read of standard data.",
            "A write of standard data."
          ],
          "type": "string",
          "enum": [
            "PERMISSION_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "ADMIN_WRITE",
            "DATA_READ",
            "DATA_WRITE"
          ]
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string"
        },
        "details": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation\nof the operation. Operations that have successfully been cancelled\nhave Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "sddc.projects.locations.list",
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "includeUnrevealedLocations": {
                  "description": "If true, the returned list will include locations which are not yet\nrevealed.",
                  "location": "query",
                  "type": "boolean"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "sddc.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "sddc.projects.locations.operations.list",
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users\/*\/operations`. To\noverride the binding, API services can add a binding such as\n`\"\/v1\/{name=users\/*}\/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "sddc.projects.locations.operations.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
                },
                "delete": {
                  "id": "sddc.projects.locations.operations.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "sddc.projects.locations.operations.cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`."
                }
              }
            },
            "clusterGroupBackups": {
              "methods": {
                "list": {
                  "id": "sddc.projects.locations.clusterGroupBackups.list",
                  "path": "v1alpha1/{+parent}/clusterGroupBackups",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroupBackups",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The location and project which will be queried for data centers.\nFor example:\n`projects\/my-project\/locations\/us-central1`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of clusterGroupBackups to return.\nThe service may return fewer than this value.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A page token, received from a previous `ListClusterGroupBackupsRequest`\ncall.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to\n`ListClusterGroupBackupsRequest` must match the call that provided the page\ntoken.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListClusterGroupBackupsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists ClusterGroupBackups in a given project and location(region)."
                },
                "get": {
                  "id": "sddc.projects.locations.clusterGroupBackups.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroupBackups/{clusterGroupBackupsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the ClusterGroupBackup to retrieve.\nResource names are schemeless URI's that follow the conventions in\nhttps:\/\/cloud.google.com\/apis\/design\/resource_names\nFor example,\n`projects\/my-project\/locations\/us-central1\/clusterGroupBackups\/my-backup`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusterGroupBackups\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ClusterGroupBackup"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single ClusterGroupBackup."
                },
                "create": {
                  "id": "sddc.projects.locations.clusterGroupBackups.create",
                  "path": "v1alpha1/{+parent}/clusterGroupBackups",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroupBackups",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The location(region) and project where the new ClusterGroupBackup\nwill be created. For example:\n`projects\/my-project\/locations\/us-central1`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "clusterGroupBackupId": {
                      "description": "Required. The user-provided id of the ClusterGroupBackup to be created.\nThis id must be unique among ClusterGroupBackups within the parent and will\nbecome the final token in the name URI.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "UUID of this invocation for idempotent operation.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ClusterGroupBackup"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new ClusterGroupBackup in a given project and location(region).\n\nThe creation is executed asynchronously and callers may check the returned\noperation to track its progress. Once the operation is completed the new\nClusterGroupBackup will be functional. Completed longrunning.Operation will\ncontain the new ClusterGroupBackup object in the response field.\n\nThe returned operation is automatically deleted after a few hours, so there\nis no need to call DeleteOperation."
                },
                "delete": {
                  "id": "sddc.projects.locations.clusterGroupBackups.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroupBackups/{clusterGroupBackupsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the ClusterGroupBackup to be deleted.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusterGroupBackups\/[^\/]+$",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "UUID of this invocation for idempotent operation.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a ClusterGroupBackup."
                }
              }
            },
            "clusterGroups": {
              "methods": {
                "list": {
                  "id": "sddc.projects.locations.clusterGroups.list",
                  "path": "v1alpha1/{+parent}/clusterGroups",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroups",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The location and project which will be queried for data centers.\nFor example:\n`projects\/my-project\/locations\/us-central1`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of clusterGroups to return. The service may return fewer\nthan this value.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A page token, received from a previous `ListClusterGroupsRequest` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to\n`ListClusterGroupsRequest` must match the call that provided the page\ntoken.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListClusterGroupsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists ClusterGroups in a given project and location(region)."
                },
                "get": {
                  "id": "sddc.projects.locations.clusterGroups.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroups/{clusterGroupsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the ClusterGroup to retrieve.\nResource names are schemeless URI's that follow the conventions in\nhttps:\/\/cloud.google.com\/apis\/design\/resource_names\nFor example,\n`projects\/my-project\/locations\/us-central1\/clusterGroups\/my-group`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusterGroups\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ClusterGroup"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single ClusterGroup."
                },
                "create": {
                  "id": "sddc.projects.locations.clusterGroups.create",
                  "path": "v1alpha1/{+parent}/clusterGroups",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroups",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The location(region) and project where the new ClusterGroup will\nbe created. For example:\n`projects\/my-project\/locations\/us-central1`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "clusterGroupId": {
                      "description": "Required. The user-provided id of the ClusterGroup to be created. This id\nmust be unique among ClusterGroups within the parent and will become the\nfinal token in the name URI.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ClusterGroup"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new ClusterGroup in a given project and location(region).\n\nThe creation is executed asynchronously and callers may check the returned\noperation to track its progress. Once the operation is completed the new\nClusterGroup will be fully functional.\nThe returned operation is automatically deleted after a few hours, so there\nis no need to call DeleteOperation."
                },
                "patch": {
                  "id": "sddc.projects.locations.clusterGroups.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroups/{clusterGroupsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The resource name of this ClusterGroup.\nResource names are schemeless URI's that follow the conventions in\nhttps:\/\/cloud.google.com\/apis\/design\/resource_names\nFor example,\n`projects\/my-project\/locations\/us-central1\/clusterGroups\/my-group`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusterGroups\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Mask of fields to update.  At least one path must be supplied in this\nfield.  The elements of the repeated paths field may only include these\nfields:\n\"description\"\n\"labels\"",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ClusterGroup"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the description and labels of a specific clusterGroup."
                },
                "delete": {
                  "id": "sddc.projects.locations.clusterGroups.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroups/{clusterGroupsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the ClusterGroup to be deleted.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusterGroups\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a ClusterGroup."
                },
                "setIamPolicy": {
                  "id": "sddc.projects.locations.clusterGroups.setIamPolicy",
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroups/{clusterGroupsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusterGroups\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "sddc.projects.locations.clusterGroups.getIamPolicy",
                  "path": "v1alpha1/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroups/{clusterGroupsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusterGroups\/[^\/]+$",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset."
                },
                "testIamPermissions": {
                  "id": "sddc.projects.locations.clusterGroups.testIamPermissions",
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroups/{clusterGroupsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusterGroups\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning."
                }
              }
              ,
              "resources": {
                "clusters": {
                  "methods": {
                    "list": {
                      "id": "sddc.projects.locations.clusterGroups.clusters.list",
                      "path": "v1alpha1/{+parent}/clusters",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroups/{clusterGroupsId}/clusters",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The project, location and cluster group which will be queried for\nclusters. For example:\n`projects\/my-project\/locations\/us-central1\/clusterGroups\/my-group`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusterGroups\/[^\/]+$",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of clusters to return. The service may return fewer than\nthis value.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "A page token, received from a previous `ListClustersRequest` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListClustersRequest`\nmust match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "List filter.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListClustersResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists Clusters in a given cluster group."
                    },
                    "get": {
                      "id": "sddc.projects.locations.clusterGroups.clusters.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroups/{clusterGroupsId}/clusters/{clustersId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the Cluster to retrieve.\nResource names are schemeless URI's that follow the conventions in\nhttps:\/\/cloud.google.com\/apis\/design\/resource_names\nFor example,\n`projects\/my-project\/locations\/us-central1\/clusterGroups\/my-group\/clusters\/my-cluster`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusterGroups\/[^\/]+\/clusters\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Cluster"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single Cluster."
                    },
                    "create": {
                      "id": "sddc.projects.locations.clusterGroups.clusters.create",
                      "path": "v1alpha1/{+parent}/clusters",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroups/{clusterGroupsId}/clusters",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The ClusterGroup in where the new Cluster will be created.\nFor example:\n`projects\/my-project\/locations\/us-central1\/clusterGroups\/my-group`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusterGroups\/[^\/]+$",
                          "type": "string"
                        },
                        "clusterId": {
                          "description": "Required. The user-provided id of the new Cluster. This id must be unique\namong Clusters within the parent and will become the final token in the\nname URI.",
                          "location": "query",
                          "type": "string"
                        },
                        "managementCluster": {
                          "description": "Required. Deprecated. Use the management property in the Cluster resource.\nWhether the cluster is the management cluster.",
                          "location": "query",
                          "type": "boolean"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Cluster"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new cluster in a given cluster group.\n\nThe creation is executed asynchronously and callers may check the returned\noperation to track its progress. Once the operation is completed the\ncluster will be fully functional.\nThe returned operation is automatically deleted after a few hours, so there\nis no need to call DeleteOperation."
                    },
                    "patch": {
                      "id": "sddc.projects.locations.clusterGroups.clusters.patch",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroups/{clusterGroupsId}/clusters/{clustersId}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "description": "Output only. The resource name of this Cluster.\nResource names are schemeless URI's that follow the conventions in\nhttps:\/\/cloud.google.com\/apis\/design\/resource_names\nFor example,\n`projects\/my-project\/locations\/us-central1\/clusterGroups\/my-group\/clusters\/my-cluster`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusterGroups\/[^\/]+\/clusters\/[^\/]+$",
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "Mask of fields to update.  At least one path must be supplied in this\nfield.  The elements of the repeated paths field may only include these\nfields:\n\"description\"\n\"labels\"",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "Cluster"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates the description and labels of a specific cluster."
                    },
                    "delete": {
                      "id": "sddc.projects.locations.clusterGroups.clusters.delete",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroups/{clusterGroupsId}/clusters/{clustersId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the Cluster to be deleted.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusterGroups\/[^\/]+\/clusters\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a Cluster."
                    },
                    "addNodes": {
                      "id": "sddc.projects.locations.clusterGroups.clusters.addNodes",
                      "path": "v1alpha1/{+cluster}:addNodes",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroups/{clusterGroupsId}/clusters/{clustersId}:addNodes",
                      "httpMethod": "POST",
                      "parameters": {
                        "cluster": {
                          "description": "Required. The resource name of the Cluster to perform add nodes.\nResource names are schemeless URI's that follow the conventions in\nhttps:\/\/cloud.google.com\/apis\/design\/resource_names\nFor example,\n`projects\/my-project\/locations\/us-central1\/clusterGroups\/my-group\/clusters\/my-cluster`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusterGroups\/[^\/]+\/clusters\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "cluster"
                      ],
                      "request": {
                        "$ref": "AddNodesRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Add bare metal nodes to a cluster."
                    },
                    "removeNode": {
                      "id": "sddc.projects.locations.clusterGroups.clusters.removeNode",
                      "path": "v1alpha1/{+name}:removeNode",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusterGroups/{clusterGroupsId}/clusters/{clustersId}:removeNode",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Output only. The resource name of this Cluster.\nResource names are schemeless URI's that follow the conventions in\nhttps:\/\/cloud.google.com\/apis\/design\/resource_names\nFor example,\n`projects\/my-project\/locations\/us-central1\/clusterGroups\/my-group\/clusters\/my-cluster`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusterGroups\/[^\/]+\/clusters\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "RemoveNodeRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Remove a bare metal node from a cluster."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}